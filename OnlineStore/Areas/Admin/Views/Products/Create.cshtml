@model OnlineStore.Areas.Admin.ViewModels.ManageProductViewModel

@{
    ViewBag.Title = "Add new Product";
}

<h2 class="page-header">Add new Product</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Name)
        @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.DescriptionShort)
        @Html.TextAreaFor(model => model.Product.DescriptionShort, 5, 5, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Product.DescriptionShort, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.DescriptionLong)
        @Html.TextAreaFor(model => model.Product.DescriptionLong, 5, 5, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Product.DescriptionLong, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MainCategory)
        @Html.DropDownListFor(
            model => model.MainCategory,
            Model.Categories.Select(c =>
                new SelectListItem { Text = c.Name, Value = c.Id.ToString(), Selected = c.Id == Model.MainCategory }).ToList<SelectListItem>(),
            new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MainCategory, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SecondaryCategory)
        @Html.DropDownListFor(
            model => model.SecondaryCategory,
            Model.Categories.Select(c =>
                new SelectListItem { Text = c.Name, Value = c.Id.ToString(), Selected = c.Id == Model.SecondaryCategory }).ToList<SelectListItem>(),
            new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SecondaryCategory, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Quantity)
        @Html.EditorFor(model => model.Product.Quantity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Product.Quantity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Product.Price)
        @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <button class="btn btn-lg btn-primary"><i class="glyphicon glyphicon-plus-sign"></i> Create Product</button>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
